---
import Layout from '../layouts/Layout.astro';
import parquetLogo from '../images/parquet.svg';
import amazonRedshiftLogo from '../images/logo-amazon-redshift.png';
import apacheSedonaLogo from '../images/logo-apache-sedona.png';
import element84Logo from '../images/logo-element84.png';
import cartoLogo from '../images/logo-carto.png';
import databricksLogo from '../images/logo-databricks.png';
import foursquareLogo from '../images/logo-foursquare.png';
import gdalLogo from '../images/logo-gdal.png';
import geoPandasLogo from '../images/logo-geopandas.png';
import geotrellisLogo from '../images/logo-geotrellis.png';
import googleBigqueryLogo from '../images/logo-google-bigquery.png';
import microsoftLogo from '../images/logo-microsoft.png';
import overtureMapsLogo from '../images/logo-overture-maps.png';
import planetLogo from '../images/logo-planet.png';
import snowflakeLogo from '../images/logo-snowflake.png';
import voltronDataLogo from '../images/logo-voltron-data.png';
import wherobotsLogo from '../images/logo-wherobots.png';
import {releases} from '../releases.js'

const latest = (await releases)[0];
---
<Layout>
  <header>
    <h1 class="center">GeoParquet</h1>
    <h4 style="display: flex; align-items: center; justify-content: center;">
      Geospatial data in&nbsp;<img src={parquetLogo.src} width="90px" alt="Apache Parquet">
    </h4>
    <p>Encoding geospatial data in Apache Parquet.</p>
  </header>
  
  <nav>
    <ul>
      <li><a href="#intro">Introduction</a></li>
      <li><a href="#why">Why GeoParquet?</a></li>
      <li><a href="#supporters">Supporters</a></li>
      <li><a href="#implementations">Implementations</a></li>
      <li><a href="releases/">Releases</a></li>
    </ul>
  </nav>
  
  <section id="intro">
    <div>
      <div>
        <header>
          <h2>About</h2>
        </header>
        <p>
          Apache Parquet is a powerful column-oriented data format, built from the ground up to as a modern alternative to
          CSV files. GeoParquet is an incubating <a href="https://ogc.org">Open Geospatial Consortium (OGC)</a> standard
          that adds interoperable geospatial types (Point, Line, Polygon) to Parquet.
        </p>
        <p>
          Read the specification for the <a href={"./releases/v" + latest.version + "/"}>v{latest.version} release</a> (or see the <a
          href={"./releases/v" + latest.version + "/schema.json"}>metadata schema</a>). Find links to older releases on the <a
          href="./releases/">release page</a>.
        </p>
        <p>
          For more information see the <a href="https://github.com/opengeospatial/geoparquet/#goals">goals and
          features</a> section of the readme in the GeoParquet repository. There is also a nice deep dive on Parquet and
          GeoParquet in this blog post: <a
          href="https://getindata.com/blog/introducing-geoparquet-data-format/">Introducing the GeoParquet data
          format</a>, and we'll be soon expanding this website with more details.
        </p>
      </div>
    </div>
  </section>
  
  <section id="why">
    <header>
      <h2>Why GeoParquet?</h2>
    </header>
    <ul>
      <li>
        <h3>Standard Geospatial Data in Parquet</h3>
        <p>Following GeoParquet's structure enables interoperability between any system that reads or writes spatial data
        in Parquet</p>
      </li>
      <li>
        <h3>Columnar Data for Geo</h3>
        <p>Data science workflows benefit from columnar data formats, and geospatial analysis can tap into its
        innovations</p>
      </li>
      <li>
        <h3>Cloud Data Warehouse Interoperability</h3>
        <p>Snowflake, BigQuery, RedShift, DataBricks can all work together seamlessly with the same geospatial data
        format</p>
      </li>
    </ul>
  </section>
  
  <section id="supporters" class="main special">
    <header class="major">
      <h2>Who is involved in GeoParquet?</h2>
        <div class="logo-container">
            <div class="logo"><img src={element84Logo.src} alt="Element 84 Logo"></div>
            <div class="logo"><img src={cartoLogo.src} alt="CARTO Logo"></div>
            <div class="logo"><img src={foursquareLogo.src} alt="Foursquare Logo"></div>
            <div class="logo"><img src={geoPandasLogo.src} alt="GeoPandas Logo"></div>
            <div class="logo"><img src={geotrellisLogo.src} alt="GeoTrellis Logo"></div>
            <div class="logo"><img src={microsoftLogo.src} alt="Microsoft Logo"></div>
            <div class="logo"><img src={planetLogo.src} alt="Planet Logo"></div>
            <div class="logo"><img src={apacheSedonaLogo.src} alt="Apache Sedona Logo"></div>
            <div class="logo"><img src={gdalLogo.src} alt="GDAL Logo"></div>
            <div class="logo"><img src={voltronDataLogo.src} alt="Voltron Data Logo"></div>
            <div class="logo"><img src={wherobotsLogo.src} alt="Wherobots Logo"></div>
            <div class="logo"><img src={googleBigqueryLogo.src} alt="Google BigQuery Logo"></div>
            <div class="logo"><img src={databricksLogo.src} alt="Databricks Logo"></div>
            <div class="logo"><img src={amazonRedshiftLogo.src} alt="Amazon Redshift Logo"></div>
            <div class="logo"><img src={snowflakeLogo.src} alt="Snowflake Logo"></div>
            <div class="logo"><img src={overtureMapsLogo.src} alt="Overture Maps Logo"></div>
        </div>
    </header>
  </section>
  
  
  <section id="implementations">
    <header>
      <h2>Software</h2>
      <p>GeoParquet is rapidly maturing, with a number of new software libraries and tools coming online.</p>
    </header>
  
    <h2>Tools</h2>
    <ul>
      <li>
        <a href="./convert/">Browser-based converter</a>: powered by the <a href="https://github.com/planetlabs/gpq">GPQ</a>
        library, you can convert GeoJSON to GeoParquet and vice-versa, from within your browser.
      </li>
      <li>
        <a
        href="https://geopandas.org/en/stable/docs/user_guide/io.html#apache-parquet-and-feather-file-formats">GeoPandas</a>
        (Python) extends the datatypes used by <a href="https://pandas.pydata.org/">pandas</a> to allow spatial operations
        on geometric types and supports <a
        href="https://geopandas.org/en/stable/docs/reference/api/geopandas.read_parquet.html">reading</a> and <a
        href="https://geopandas.org/en/stable/docs/reference/api/geopandas.GeoDataFrame.to_parquet.html">writing</a> GeoParquet.
      </li>
      <li>
        <a href="https://qgis.org">QGIS</a> Windows and Linux ship with GeoParquet support, and Mac can work installing with <a href="https://docs.conda.io/en/latest/">conda</a> (from the terminal with conda activated run 'conda config --add channels conda-forge', 'conda install qgis libgdal-arrow-parquet', and then just type 'qgis' in the terminal).
      </li>
      <li>
        <a href="https://www.scribblemaps.com/">Scribble Maps</a> is a full-featured web app that supports both import & export of GeoParquet.
      </li>
      <li><a href="https://github.com/geoparquet/bigquery-converter">BigQuery Converter</a> provides Python scripts to read and write
        GeoParquet files with Google BigQuery.</li>
      <li><a href="https://carto.com">CARTO</a> is a geospatial platform and <a href="https://docs.carto.com/carto-user-manual/data-explorer/importing-data#supported-formats">supports import</a>
        of GeoParquet.</li>
      <li><a href="https://github.com/planetlabs/gpq">gpq</a> provides a command-line interface to validate and describe any GeoParquet file. It can also convert GeoParquet to and from GeoJSON</li>
      <li><a href="https://pypi.org/project/stac-geoparquet/">stac-geoparquet</a> converts <a href="https://stacspec.org">STAC</a> catalogs into GeoParquet.</li>
      <li><a href="https://sedona.apache.org/1.4.1/">Apache Sedona</a> is a cluster computing system for processing large-scale spatial data that extends existing cluster computing systems like Apache Spark and Apache Flink. 
        It can <a href="https://sedona.apache.org/latest-snapshot/tutorial/sql/#load-geoparquet">load</a> and <a href="https://sedona.apache.org/latest-snapshot/tutorial/sql/#save-geoparquet">save</a> GeoParquet with Scala, Java, Python or R.</li>
      <li><a href="https://developers.arcgis.com/geoanalytics/">Esri's ArcGIS GeoAnalytics Engine</a> 'delivers spatial analysis to your big data by extending Apache Spark with ready-to-use 
        SQL functions and analysis tools'. It can load or save GeoParquet with the Python library or the Spark plugin, see their <a href="https://developers.arcgis.com/geoanalytics/data-sources/geoparquet/">GeoParquet page</a> 
        for more details.</li>
    <li><a href="https://fme.safe.com">FME: by Safe Software</a> is a no code platform that effortlessly integrates your data, including read and write support for GeoParquet starting in <a href="https://engage.safe.com/support/downloads/">version 23.1</a></li>
    <li><a href="https://seer.ai">SeerAI's</a>&nbsp;<a href="https://docs.seerai.space/geodesic">Geodesic Platform</a> is a cloud-native, planetary scale Spatiotemporal Data Mesh and Data Fusion platform. Geodesic's Boson Service Mesh supports GeoParquet natively and can expose massive GeoParquet datasets as compatible formats to other analytical systems and geospatial software via APIs. All tabular and feature data outputs are written in Parquet/GeoParquet format.</li>
    <li><a href="https://wherobots.com">Wherobots</a> provides a fully-managed cloud spatial data lakehouse that can manage and analyze geospatial data at any scale. All data on Wherobots can be saved in GeoParquet format and cataloged by its <a href="https://docs.wherobots.services/latest/references/havasu/introduction/">Havasu Spatial Table Format</a>.</li>
      <li>
        <a href="https://pygeoapi.io/">pygeoapi</a> is a Python server implementation of the OGC API suite of standards. It now supports a <a href="https://docs.pygeoapi.io/en/latest/data-publishing/ogcapi-features.html#parquet">Parquet</a> provider that allows publishing a GeoParquet file as an OGC API - Features collection.
      </li>
    </ul>
  
    <h2>Libraries</h2>
    <ul>
      <li><a href="https://github.com/paleolimbot/geoarrow">geoarrow</a> (R)</li>
      <li><a href="https://wcjochem.github.io/sfarrow/index.html">sfarrow</a> (R)</li>
      <li><a href="https://gdal.org/drivers/vector/parquet.html">GDAL/OGR</a> (C++, bindings in several languages)</li>
      <li><a href="https://github.com/JuliaGeo/GeoParquet.jl">GeoParquet.jl</a> (Julia)</li>
      <li><a href="https://github.com/planetlabs/gpq">gpq</a> (Go and WASM)</li>
      <li><a href="https://github.com/Toblerity/Fiona">Fiona</a> (Python - as of version 1.9.4. Note the GeoParquet driver will only be available if your system's GDAL library links libarrow; fiona wheels on PyPI do not include libarrow as it is rather large.)</li>
      <li><a href="https://github.com/bertt/geoparquet">.NET 6 library</a> (.NET)</li>
      <li><a href="https://gist.github.com/jpswinski/13074fc773f92a529f98b274e5ad5283">C++ example code</a> - see <a href="https://github.com/opengeospatial/geoparquet/discussions/164">this discussion topic</a> for more info.</li>
    </ul>
  </section>
  
  <section id="data-providers">
    <header>
      <h2>Data Providers & Sample Data</h2>
      <p>
        There are many sources of GeoParquet data, with more and more coming online all the time. If you have or know of a
        good source of GeoParquet data please let us know!
      </p>
    </header>
  
    <ul>
      <li>
        <a href="http://microsoft.com">Microsoft</a> provides access to the Planetary Computer STAC items as GeoParquet,
        see this <a href="https://planetarycomputer.microsoft.com/docs/quickstarts/stac-geoparquet/">quickstart guide</a>
        for more information. Their <a href="https://planetarycomputer.microsoft.com/dataset/ms-buildings">Building
        Footprints</a> are also distributed as GeoParquet.
      </li>
      <li>
        There is also a sample dataset <a
        href="https://storage.googleapis.com/open-geodata/linz-examples/nz-building-outlines.parquet">nz-building-outlines.parquet</a>
        that has been used in early testing, converted from GeoJSON downloaded from the <a
        href="https://data.linz.govt.nz/layer/101290-nz-building-outlines/">LINZ Data Service</a>.
      </li>
      <li>
        <a href="https://beta.source.coop/">source.coop</a> provides two datasets in <a href="https://cloudnativegeo.org">cloud-native geospatial</a> formats, 
          including GeoParquet. The <a href="https://beta.source.coop/cholmes/google-open-buildings">Google Open Buildings cloud-native distribution</a>
          has over 800 million building footprints across Africa and SE Asia. And the <a href="https://beta.source.coop/cholmes/eurocrops">Eurocrops cloud-native distribution</a>
          provides over 20 million harmonized field boundaries across 16 different European countries.
      </li>
    </ul>
  </section>
  
  <footer>
    <section>
      <h2>Pull Requests Accepted</h2>
      <p>
        The GeoParquet project and website are fully community driven. If something is not right on the website, or if you
        want to contribute a tutorial, add your software to the implementation list or tell the world about the awesome
        data you are making available as GeoParquet then please contribute on GitHub.
      </p>
      <ul>
        <li><a href="https://github.com/opengeospatial/geoparquet">Specification</a></li>
        <li><a href="https://github.com/geoparquet/geoparquet.github.io">Website</a></li>
      </ul>
    </section>
    <p>
      This work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by/4.0/">Creative Commons
      Attribution 4.0 International License</a>.
    </p>
  </footer>  
</Layout>
